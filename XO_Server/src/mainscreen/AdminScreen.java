package mainscreen;

import dal.PlayerDAO;
import ifunctions.ICellPickGetter;
import ifunctions.IRequest;
import ifunctions.IRoomListGetter;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.Player;
import model.Room;
import ifunctions.IPlayerListGetter;
import ifunctions.IRoomStateGetter;
import skeletons.CellPickGetter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author thuy
 */
public class AdminScreen extends javax.swing.JFrame {

    /**
     * Creates new form AdminScreen
     */
    public PlayerDAO pda = new PlayerDAO();
    public ArrayList<Room> roomList = new ArrayList<>();
    public int ROOMID = 0;

    public AdminScreen() {
        initComponents();
        setLocationRelativeTo(null);
        loadPlayerList();
        loadRoomList();
    }

    public void loadPlayerList() {
        ArrayList<Player> playerList = pda.getPlayerList();
        String[] cols = {"Rank", "ID", "Name", "Acc", "Pass", "Score"};
        Object[][] rows = new Object[playerList.size()][cols.length];
        for (int i = 0; i < playerList.size(); i++) {
            Player p = playerList.get(i);
            rows[i][0] = pda.getRank(p.getId());
            rows[i][1] = p.getId();
            rows[i][2] = p.getName();
            rows[i][3] = p.getAcc();
            rows[i][4] = p.getPass();
            rows[i][5] = p.getScore();
        }
        DefaultTableModel df = new DefaultTableModel(rows, cols);
        tblRank.setModel(df);
    }

    public void loadRoomList() {
        String[] cols = {"RoomID", "Player1 ID", "Player2 ID", "State P1", "State P2", "Current Cell Pick"};
        Object[][] rows = new Object[roomList.size()][cols.length];
        for (int i = 0; i < roomList.size(); i++) {
            Room p = roomList.get(i);
            rows[i][0] = p.getRoomID();
            rows[i][1] = (p.getP1id() == 0) ? "-" : p.getP1id();
            rows[i][2] = (p.getP2id() == 0) ? "-" : p.getP2id();
            rows[i][3] = p.getState1();
            rows[i][4] = p.getState2();
            rows[i][5] = p.getCurrentCellPickIndex();
        }
        DefaultTableModel df = new DefaultTableModel(rows, cols);
        tblRoom.setModel(df);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStart = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRank = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        getContentPane().add(btnStart, java.awt.BorderLayout.PAGE_END);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("ROOM"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRoom);

        jPanel2.add(jScrollPane1, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("RANK"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        tblRank.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRank.setName("RANK"); // NOI18N
        jScrollPane2.setViewportView(tblRank);
        if (tblRank.getColumnModel().getColumnCount() > 0) {
            tblRank.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            tblRank.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            tblRank.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            tblRank.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        jPanel3.add(jScrollPane2, new java.awt.GridBagConstraints());

        jPanel1.add(jPanel3);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        try {
            Registry rgsty = LocateRegistry.createRegistry(8787);

            IPlayerListGetter playerListGetter = new skeletons.PlayerListGetter();
            rgsty.rebind("playerListGetter", playerListGetter);
            IRoomListGetter roomListGetter = new skeletons.RoomListGetter(this);
            rgsty.rebind("roomListGetter", roomListGetter);
            IRequest request = new skeletons.Request(this);
            rgsty.rebind("request", request);
            IRoomStateGetter roomStateGetter = new skeletons.RoomStateGetter(this);
            rgsty.rebind("roomStateGetter", roomStateGetter);
            ICellPickGetter cellPickGetter = new CellPickGetter(this);
            rgsty.rebind("cellPickGetter", cellPickGetter);
            btnStart.setEnabled(false);
        } catch (RemoteException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnStartActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblRank;
    private javax.swing.JTable tblRoom;
    // End of variables declaration//GEN-END:variables
}
